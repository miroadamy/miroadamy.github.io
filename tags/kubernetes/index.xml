<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kubernetes on Miro&#39;s World</title>
    <link>https://miroadamy.com/tags/kubernetes/</link>
    <description>Recent content in kubernetes on Miro&#39;s World</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 19 Jan 2020 11:12:38 +0800</lastBuildDate>
    
	<atom:link href="https://miroadamy.com/tags/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kubectl client and server version mismatch</title>
      <link>https://miroadamy.com/posts/2020-01-19-kubectl-version/</link>
      <pubDate>Sun, 19 Jan 2020 11:12:38 +0800</pubDate>
      
      <guid>https://miroadamy.com/posts/2020-01-19-kubectl-version/</guid>
      <description>Accessing Rancher cluster I was doing update on Kubernetes cluster I had not touch in a while when I noticed weird behaviour:
 the output of get command was incomplete the -o wide option had no effect on the command output  (IP addresses are masked)
1 2 3 4 5  ➜ .kube git:(master) ✗ kubectl --kubeconfig dropship-dev-uat get nodes NAME AGE ip-172-xx-xx-xx.ca-central-1.compute.internal 613d ip-172-xx-xx-xx.ca-central-1.compute.internal 628d ip-172-xx-xx-xx.ca-central-1.compute.internal 558d   and</description>
    </item>
    
    <item>
      <title>Rancher CLI vs kubectl</title>
      <link>https://miroadamy.com/posts/2020-01-18-rancher-cli/</link>
      <pubDate>Sat, 18 Jan 2020 11:22:48 +0800</pubDate>
      
      <guid>https://miroadamy.com/posts/2020-01-18-rancher-cli/</guid>
      <description>Accessing Rancher cluster After creation, you can access the K8s cluster running Rancher by saving the config file available from the console and using standard kubectl command
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  kubectl --kubeconfig ./quickstart.kubeconfig get pods --all-namespaces NAMESPACE NAME READY STATUS RESTARTS AGE cattle-system cattle-cluster-agent-5c98cb979f-bbhxf 1/1 Running 0 5d23h cattle-system cattle-node-agent-dwnxk 1/1 Running 0 5d23h cattle-system kube-api-auth-d4zgq 1/1 Running 0 5d23h ingress-nginx default-http-backend-67cf578fc4-grmsw 1/1 Running 0 5d23h ingress-nginx nginx-ingress-controller-mpnmb 1/1 Running 0 5d23h kube-system canal-jw85q 2/2 Running 0 5d23h kube-system coredns-5c59fd465f-47q5z 1/1 Running 0 5d23h kube-system coredns-autoscaler-d765c8497-sm5xf 1/1 Running 0 5d23h kube-system metrics-server-64f6dffb84-bp864 1/1 Running 0 5d23h kube-system rke-coredns-addon-deploy-job-95qnk 0/1 Completed 0 5d23h kube-system rke-ingress-controller-deploy-job-brv7w 0/1 Completed 0 5d23h kube-system rke-metrics-addon-deploy-job-tvt89 0/1 Completed 0 5d23h kube-system rke-network-plugin-deploy-job-7rqcr 0/1 Completed 0 5d23h   The same information (and much more) is available using rancher CLI.</description>
    </item>
    
    <item>
      <title>Kubernetes client server version mismatch</title>
      <link>https://miroadamy.com/posts/2020-01-15-kubectl/</link>
      <pubDate>Wed, 15 Jan 2020 21:22:48 +0800</pubDate>
      
      <guid>https://miroadamy.com/posts/2020-01-15-kubectl/</guid>
      <description>Symptoms I was doing update on Kubernetes cluster I had not touch in a while when I noticed weird behaviour:
 the output of get command was incomplete the -o wide option had no effect on the command output  Example The get nodes command is incomplete 1 2 3 4 5  ➜ .kube git:(master) ✗ kubectl --kubeconfig dropship-dev-uat get nodes NAME AGE ip-172-20-33-51.ca-central-1.compute.internal 613d ip-172-20-55-121.ca-central-1.compute.internal 628d ip-172-20-85-9.ca-central-1.compute.internal 558d   The -o wide has no effect 1 2 3 4 5  ➜ .</description>
    </item>
    
    <item>
      <title>Creating Kubernetes Cluster in AWS from scratch with kops</title>
      <link>https://miroadamy.com/posts/2018-05-07-k8s-from-scratch-kops/</link>
      <pubDate>Mon, 07 May 2018 11:22:48 +0800</pubDate>
      
      <guid>https://miroadamy.com/posts/2018-05-07-k8s-from-scratch-kops/</guid>
      <description>This describes creation of K8s cluster in AWS environment from scratch as done for microservices based eCommerce project.
Pre-requisites  AWS account access - IAM with Admin privileges AWS CLI installed - https://docs.aws.amazon.com/cli/latest/userguide/cli-install-macos.html CLI credentials (secret key + api Key) - https://docs.aws.amazon.com/cli/latest/reference/iam/index.html Kubectl and Kops local install ** see https://github.com/kubernetes/kops and https://kubernetes.io/docs/tasks/tools/install-kubectl/  Test of access 1 2 3 4 5 6 7 8 9 10 11 12 13 14  ➜ etc git:(feature/kubernetes) aws --version aws-cli/1.</description>
    </item>
    
  </channel>
</rss>