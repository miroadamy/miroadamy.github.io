<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>git on Miro&#39;s World</title>
    <link>https://miroadamy.com/tags/git/</link>
    <description>Recent content in git on Miro&#39;s World</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 05 Sep 2016 11:22:48 +0800</lastBuildDate>
    
	<atom:link href="https://miroadamy.com/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Update all local branches in Git repo</title>
      <link>https://miroadamy.com/posts/2016-09-05-git-update-all-local-branches/</link>
      <pubDate>Mon, 05 Sep 2016 11:22:48 +0800</pubDate>
      
      <guid>https://miroadamy.com/posts/2016-09-05-git-update-all-local-branches/</guid>
      <description>Update all local branches in Git repo Issue: The git pull updates just one current branch.
In DevOps I am following many Git repos and need to keep up to date for all local branches.
git ffwd-update command Source: http://stackoverflow.com/questions/4318161/can-git-pull-all-update-all-my-local-branches
Create file named git-ffwd-update somewhere on the path (in my case ~/bin)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  #!</description>
    </item>
    
    <item>
      <title>Git bits 2</title>
      <link>https://miroadamy.com/posts/2016-03-23-gitbits2/</link>
      <pubDate>Wed, 23 Mar 2016 12:57:35 -0500</pubDate>
      
      <guid>https://miroadamy.com/posts/2016-03-23-gitbits2/</guid>
      <description>Using the Scala source repo to demonstrate - see Github
Show merged and unmerged branches This command allows you to show all local branches merged / unmerged to current branch
1 2 3 4 5  ➜ scala git:(2.12.x) git branch -a --merged * 2.12.x remotes/origin/2.11.x remotes/origin/2.12.x remotes/origin/HEAD -&amp;gt; origin/2.12.x  1 2 3 4 5 6 7  ➜ scala git:(2.12.x) git branch -a --no-merged remotes/origin/2.10.x remotes/origin/2.8.x remotes/origin/2.9.x remotes/origin/DarkDimius-patch-1 remotes/origin/gh-pages remotes/origin/legacy/msil   This shows you all local branches merged into named branch:</description>
    </item>
    
    <item>
      <title>Git - find unmerged commits</title>
      <link>https://miroadamy.com/posts/2016-03-22-git-unmerged/</link>
      <pubDate>Tue, 22 Mar 2016 12:57:35 -0500</pubDate>
      
      <guid>https://miroadamy.com/posts/2016-03-22-git-unmerged/</guid>
      <description>This is Ruby script I found way back and was using it since.
The credits for creation goes to Zach Dennis. The script is decribed in his blog post
The source is here
Example This is beginning of very long output from Groovy source
The codedescription>
    </item>
    
    <item>
      <title>Git committer activity</title>
      <link>https://miroadamy.com/posts/2016-03-21-gitbits1/</link>
      <pubDate>Mon, 21 Mar 2016 12:57:35 -0500</pubDate>
      
      <guid>https://miroadamy.com/posts/2016-03-21-gitbits1/</guid>
      <description>Git command git shortlog is very handy to see what is team activity.
Show committer activity - whole project (output shortened to first 20 lines)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  git shortlog -sn | head -20 2991	Paul King 1757	Cedric Champeau 1615	Jochen Theodorou 1031	James Strachan 749	Guillaume Laforge 312	Roshan Dawrani 306	Jason Dillon 301	Danno Ferrin 284	Alex Tkachman 273	PascalSchumacher 230	John Wilson 217	Pascal Schumacher 204	pascalschumacher 160	Thibault Kruse 158	Jeremy Rayner 134	Russel Winder 123	Cédric Champeau 122	Hamlet D&amp;#39;Arcy 116	Dierk Koenig 104	Pilho Kim   variant (without n) has different ordering:</description>
    </item>
    
    <item>
      <title>Git project statistic tool</title>
      <link>https://miroadamy.com/posts/2016-03-20-gitinspector/</link>
      <pubDate>Sun, 20 Mar 2016 12:57:35 -0500</pubDate>
      
      <guid>https://miroadamy.com/posts/2016-03-20-gitinspector/</guid>
      <description>Git project statistic tool Python based, requires Python 2.6+
Works OOTB on Mac
Installation  Download TAR from Github unzipped to /opt
1 2 3 4 5 6 7 8 9  ➜ ll /opt/gitinspector-0.3.2 total 52K -rw-r--r-- 1 miro 999 Jul 29 2013 DESCRIPTION.txt -rw-r--r-- 1 miro 32K Jun 14 2013 LICENSE.txt -rw-r--r-- 1 miro 78 Jul 2 2013 MANIFEST.in -rw-r--r-- 1 miro 681 Jan 13 2014 README.txt drwxr-xr-x 45 miro 1.</description>
    </item>
    
    <item>
      <title>Accessing internal AWS servers directly from Mac</title>
      <link>https://miroadamy.com/posts/2016-02-18-access-aws-servers/</link>
      <pubDate>Thu, 18 Feb 2016 00:57:35 -0500</pubDate>
      
      <guid>https://miroadamy.com/posts/2016-02-18-access-aws-servers/</guid>
      <description>Motivation for this hack is my unwillingness to suffer the pain of using Windows UI just to access BCC, ACC or other ATG tools requiring non command-line interface.
The credit for finding out about approach is blog post by James McOrmond - VPN over SSH - who is using this neat trick from Linux for quite some time.
The software mentioned https://github.com/apenwarr/sshuttle supposedly works on OS-X, however, it has not been updated for 4-5 years and would not function for me (OS-X Yosemite).</description>
    </item>
    
    <item>
      <title>How to keep git log and less output on the screen</title>
      <link>https://miroadamy.com/posts/2015-03-10-git-log-output-less/</link>
      <pubDate>Tue, 10 Mar 2015 00:57:35 -0500</pubDate>
      
      <guid>https://miroadamy.com/posts/2015-03-10-git-log-output-less/</guid>
      <description>When git uses less as pager the output of commands like git log disappears from the console screen when you exit from less. This is not convenient in many cases so here is how to fix this.
Just for git commands:
1  git config --global --replace-all core.pager &amp;#34;less -iXFR&amp;#34;   For less globally (including git) - add to .bashrc / .zshrc / etc:
1  export LESS=-iXFR   The options we set for less are:</description>
    </item>
    
    <item>
      <title>Difference between matching and simple Git push</title>
      <link>https://miroadamy.com/posts/2013-12-31-difference-between-matching-and-simple-git-push/</link>
      <pubDate>Tue, 31 Dec 2013 16:41:38 -0500</pubDate>
      
      <guid>https://miroadamy.com/posts/2013-12-31-difference-between-matching-and-simple-git-push/</guid>
      <description>I started to see this message in some of my Git environments
1 2 3 4 5 6 7 8 9 10 11  Git 2.0 from &amp;#39;matching&amp;#39; to &amp;#39;simple&amp;#39;. To squelch this message and maintain the current behavior after the default changes, use: git config --global push.default matching To squelch this message and adopt the new behavior now, use: git config --global push.default simple    This is collection of information gathered from Stackoverflow, Git docs and various internet sources.</description>
    </item>
    
    <item>
      <title>Few gitbits to remember</title>
      <link>https://miroadamy.com/posts/2012-03-25-few-git-tricks/</link>
      <pubDate>Sun, 25 Mar 2012 15:43:48 +0800</pubDate>
      
      <guid>https://miroadamy.com/posts/2012-03-25-few-git-tricks/</guid>
      <description>Few gitbits to remember Pushing new local branch to remote repo: Find a ref that matches experimental in the source repository (most likely, it would findrefs/heads/experimental), and update the same ref (e.g. refs/heads/experimental) in origin repository with it.
If experimental did not exist remotely, it would be created.
git push origin experimental
This is the same as:
git push origin experimental:refs/heads/experimental
Create the branch experimental in the origin repository by copying the current experimental branch.</description>
    </item>
    
    <item>
      <title>Excellent free Git tutorial</title>
      <link>https://miroadamy.com/posts/2009-01-02-excellent-free-git-tutorial/</link>
      <pubDate>Fri, 02 Jan 2009 11:29:21 -0500</pubDate>
      
      <guid>https://miroadamy.com/posts/2009-01-02-excellent-free-git-tutorial/</guid>
      <description>Two screencasts, about 80 and 40 minutes long are available at:
http://excess.org/article/2008/07/ogre-git-tutorial/
Courtesy by fellow Ottawan Bert Trojanowski. Really nice job of providing deep enough technical understanding with good illustrative examples.
If you want to get into distributed version control (which is IMHO way to go), check this out.</description>
    </item>
    
    <item>
      <title>Three great Git resources</title>
      <link>https://miroadamy.com/posts/2008-09-20-three-great-git-resources/</link>
      <pubDate>Sat, 20 Sep 2008 22:10:41 -0400</pubDate>
      
      <guid>https://miroadamy.com/posts/2008-09-20-three-great-git-resources/</guid>
      <description>Before I forget :-)
1) The Git Magic
2) Two git books Pragmatic Git Book and Git internals - nice complement each other
3) Linus Torvalds slightly offensive and very funny talk at Google
in addition to great, precise but not necessarily most digestable manual ...</description>
    </item>
    
  </channel>
</rss>