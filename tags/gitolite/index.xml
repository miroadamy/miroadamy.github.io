<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gitolite on Miro&#39;s World</title>
    <link>https://miroadamy.com/tags/gitolite/</link>
    <description>Recent content in gitolite on Miro&#39;s World</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 02 Nov 2016 11:22:48 +0800</lastBuildDate><atom:link href="https://miroadamy.com/tags/gitolite/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Process for transferring Git repo from Gitolite to Bitbucket</title>
      <link>https://miroadamy.com/posts/2016-11-02-pensieve-to-bitbucket/</link>
      <pubDate>Wed, 02 Nov 2016 11:22:48 +0800</pubDate>
      
      <guid>https://miroadamy.com/posts/2016-11-02-pensieve-to-bitbucket/</guid>
      <description>Task Transfer full Git history (all branches, tags, etc) to Bitbucket so that development can continue from there
User setup  List all keys in Gitolite must have access to Gitolite admin interface  cd $ADMIN_HOME/pensieve/PRJ-admin/gitolite-admin âžœ gitolite-admin git:(master) ll keydir total 144K -rw-r--r-- 1 miro 401 Jun 29 2015 alter.pub -rw-r--r-- 1 miro 397 Jun 29 2015 codereview.pub -rw-r--r-- 1 miro 400 Apr 18 2016 hybris.pub -rw-r--r-- 1 miro 400 Apr 19 2016 hybris2.</description>
    </item>
    
    <item>
      <title>Gitolite permissions setup</title>
      <link>https://miroadamy.com/posts/2014-04-02-gitolite-permissions/</link>
      <pubDate>Wed, 02 Apr 2014 11:22:48 +0800</pubDate>
      
      <guid>https://miroadamy.com/posts/2014-04-02-gitolite-permissions/</guid>
      <description>This documents how to enforce the Gitolite permission to make LIVE branch writeable only by team leads
How gitolite works Repository permission structure This is general format of repo definition
REPO NAME rule line rule line for example
@staff = dilbert alice wally bob repo foo RW+ = dilbert # line 1 RW+ dev = alice # line 2 - = wally # line 3 RW temp/ = @staff # line 4 R = ashok # line 5 The Rule line has format:</description>
    </item>
    
    <item>
      <title>Gitolite Administration Guide</title>
      <link>https://miroadamy.com/posts/2012-08-06-gitilite-admin/</link>
      <pubDate>Mon, 06 Aug 2012 11:22:48 +0800</pubDate>
      
      <guid>https://miroadamy.com/posts/2012-08-06-gitilite-admin/</guid>
      <description>How to setup new client You need to be pensieve admin to do this. You will have to login as service user (non-host account) and su to root.
 create new Linux user on pensieve setup gitolite:  git clone &amp;lt;git://github.com/sitaramc/gitolite&amp;gt; mkdir bin; export PATH=$PATH:~/bin gitolite/install -ln   add own public key to gitolite to get access to gilotile-admin repo (note the naming restrictions!!)  gitolite setup -pk miro.pub   get public key for the client account admin and add it (there can be multiple admins) clone the gitolite-admin repo from workstation whose pub key was added  git clone &amp;lt;client@pensieve.</description>
    </item>
    
    <item>
      <title>Using Gitolite for code sharing setup</title>
      <link>https://miroadamy.com/posts/2012-06-21-gitolite-setup/</link>
      <pubDate>Thu, 21 Jun 2012 11:22:48 +0800</pubDate>
      
      <guid>https://miroadamy.com/posts/2012-06-21-gitolite-setup/</guid>
      <description>General setup of code sharing host The code sharing host (Pensieve) is dedicated Linux server in DMZ, accessible from external locations as well as from internal network (dual homed) - for the build server access.
Main features  multiple users each user represent a client:  e.g. users client1    Users are separated by Unix permissions:  access rights to /home/USER are 0700 - no access except the dedicated user only ThinkWrap has root access or sudo access the access via ssh for the user is blocked - the user client1 cannot log in using ssh and get shell, only use git to pull or push changes  Inside each user, there are multiple projects.</description>
    </item>
    
  </channel>
</rss>
