<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Miro&#39;s World</title>
    <link>https://miroadamy.com/categories/programming/</link>
    <description>Recent content in Programming on Miro&#39;s World</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 23 Nov 2019 22:22:48 +0800</lastBuildDate>
    
	<atom:link href="https://miroadamy.com/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Building Hugo as well on GitLab pages</title>
      <link>https://miroadamy.com/posts/2019-11-23-gitlab-hugo/</link>
      <pubDate>Sat, 23 Nov 2019 22:22:48 +0800</pubDate>
      
      <guid>https://miroadamy.com/posts/2019-11-23-gitlab-hugo/</guid>
      <description>Parallel building challenges Unlike Github, Gitlab considers Hugo blogs first class citizens and does not impose any restrictions on repo naming.
I had 3 challenges to overcome related to co-existence of GH and GL versions:
 I need to use same repo for both GH and GL the submodule link for public does not work on GL the site root is different - I have no custom domain forward for GitLab  Using same repo To separate the GH and GL, I have added 2 remotes to repo and special branch gitlab-pages.</description>
    </item>
    
    <item>
      <title>Current Hugo setup on Github Pages</title>
      <link>https://miroadamy.com/posts/2019-11-22-hugo-setup/</link>
      <pubDate>Fri, 22 Nov 2019 11:22:48 +0800</pubDate>
      
      <guid>https://miroadamy.com/posts/2019-11-22-hugo-setup/</guid>
      <description>How does the blog setup and publishing work Before I forget, here is how the current configuration works.
There are two repositories at play:
 source repo - https://github.com/miroadamy/miroadamy.com github pages repo (== GHPR) - https://github.com/miroadamy/miroadamy.github.io  The blog source repo contains only source files (.md, static media etc). This repo has usual submodules under the /themes - e.g. /themes/even which is one currently used.
The Githup pages repo contains generated static site, with index.</description>
    </item>
    
    <item>
      <title>Update all local branches in Git repo</title>
      <link>https://miroadamy.com/posts/2016-09-05-git-update-all-local-branches/</link>
      <pubDate>Mon, 05 Sep 2016 11:22:48 +0800</pubDate>
      
      <guid>https://miroadamy.com/posts/2016-09-05-git-update-all-local-branches/</guid>
      <description>Update all local branches in Git repo Issue: The git pull updates just one current branch.
In DevOps I am following many Git repos and need to keep up to date for all local branches.
git ffwd-update command Source: http://stackoverflow.com/questions/4318161/can-git-pull-all-update-all-my-local-branches
Create file named git-ffwd-update somewhere on the path (in my case ~/bin)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  #!</description>
    </item>
    
    <item>
      <title>Replace BSD grep with GNU grep</title>
      <link>https://miroadamy.com/posts/2014-11-02-bsd-grep-gnu/</link>
      <pubDate>Sun, 02 Nov 2014 11:22:48 +0800</pubDate>
      
      <guid>https://miroadamy.com/posts/2014-11-02-bsd-grep-gnu/</guid>
      <description>If annoyed with: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  ➜ ~ echo $PATH | tr &amp;#39;:&amp;#39; &amp;#39;\n&amp;#39; /usr/local/opt/coreutils/libexec/gnubin /Library/Java/JavaVirtualMachines/jdk1.7.0_55.jdk/Contents/Home/bin /opt/ant/bin /opt/groovy/bin /opt/gradle/bin /Users/miro/bin /usr/local/bin /usr/bin /bin /usr/sbin /sbin /usr/local/bin /opt/X11/bin /usr/texbin # YEs I am using GNU core utils but grep is not there # The issue ➜ ~ grep --version grep (BSD grep) 2.</description>
    </item>
    
    <item>
      <title>Keepass-Node install</title>
      <link>https://miroadamy.com/posts/2014-10-03-keepas-node/</link>
      <pubDate>Fri, 03 Oct 2014 11:22:48 +0800</pubDate>
      
      <guid>https://miroadamy.com/posts/2014-10-03-keepas-node/</guid>
      <description>See https://github.com/gesellix/keepass-node
1 2  ➜ keepass-node git:(master) pwd /Users/miro/src/PLG/keepass-node   Install 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107  ➜ keepass-node git:(master) ✗ sudo npm install Password: &amp;gt; dejavu@0.</description>
    </item>
    
    <item>
      <title>Endeca start scripts - Oracle way</title>
      <link>https://miroadamy.com/posts/2013-10-16-endeca-oracle/</link>
      <pubDate>Wed, 16 Oct 2013 11:22:48 +0800</pubDate>
      
      <guid>https://miroadamy.com/posts/2013-10-16-endeca-oracle/</guid>
      <description>I have ported the Oracle VM style management scripts into the Loyalty VM.
The scripts are in the loyalty-endeca Git repo, originally in eVoucher branch but also merged into edc
1 2 3 4 5 6 7 8 9 10  [tkuser@vm-lo1-hpr-ma endeca]$ ls -1 total 28 dev-check-environment.sh* dev-deploy-endeca-app.sh* dev-endeca-environmet.ini* dev-remove-endeca-app.sh* endeca-control* endeca-vars.txt* README.md* RewardsEndc/   dev-endeca-environmet.ini This is environment setting script.
1 2 3 4 5 6 7 8 9 10 11  ### MUST BE SOURCED IN source dev-endeca-environmet.</description>
    </item>
    
    <item>
      <title>Sublime text macro to insert timestamp</title>
      <link>https://miroadamy.com/posts/2013-09-25-sublime-text-macro-timestamp/</link>
      <pubDate>Wed, 25 Sep 2013 16:12:48 +0800</pubDate>
      
      <guid>https://miroadamy.com/posts/2013-09-25-sublime-text-macro-timestamp/</guid>
      <description>Sublime text macro to insert timestamp 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  platform-edc $ cat ~/Library/Application\ Support/Sublime\ Text\ 2/Packages/User/time_stamp.py import sublime_plugin from datetime import datetime class TimeStampCommand(sublime_plugin.TextCommand): def run(self, edit): # formatting options at http://docs.python.org/2/library/datetime.html#strftime-strptime-behavior stamp = datetime.now().strftime(&amp;#34;%Y-%m-%d_%H:%M:%S&amp;#34;) # 2013-07-18 14:54:23 for r in self.view.sel(): if r.empty(): self.view.insert(edit, r.a, stamp) else: self.view.replace(edit, r, stamp) platform-edc $   Documentation - see</description>
    </item>
    
    <item>
      <title>Performance issues with Quicklook in OS-X Lion</title>
      <link>https://miroadamy.com/posts/2013-02-23-perf-quicklook-lion/</link>
      <pubDate>Sat, 23 Feb 2013 11:22:48 +0800</pubDate>
      
      <guid>https://miroadamy.com/posts/2013-02-23-perf-quicklook-lion/</guid>
      <description>I have been experiencing issues with Quicklook (press Space on file in Finder or Pathfinder) for some time: it took several second, sometimes 10-15 to show content of simple 1K large property file.
It turned out that on of the QuickLook plugins, installed originally way back in Leopard and brought ahead with TimeMachine restores could have been the reason: the QLStephen.
For more on that plugin see:
 http://whomwah.github.com/qlstephen/ https://github.com/whomwah/qlstephen  To remove the plugin, go to ~/Library/QuickLook and delete the file (it is the bundle) QLStephen.</description>
    </item>
    
    <item>
      <title>GVM</title>
      <link>https://miroadamy.com/posts/2013-01-08-gvm/</link>
      <pubDate>Tue, 08 Jan 2013 11:22:48 +0800</pubDate>
      
      <guid>https://miroadamy.com/posts/2013-01-08-gvm/</guid>
      <description>Installed GVM from:
http://gvmtool.net
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  ~ $ curl -s get.gvmtool.net | bash Thanks for usingill now attempt installing.</description>
    </item>
    
    <item>
      <title>Discovered Trello</title>
      <link>https://miroadamy.com/posts/2012-11-12-trello/</link>
      <pubDate>Mon, 12 Nov 2012 11:22:48 +0800</pubDate>
      
      <guid>https://miroadamy.com/posts/2012-11-12-trello/</guid>
      <description>Finally a todo/task/project management system that is very good fit.
Here is why:
 is pretty visually modern and dynamic UI has Web back-end (usable from Linux VM) has decent iPhone app allows checklists (multiple) allows color coding Markdown support ecosystem  There is Gmello that allows create card from GMail, plus few others that seem to bridge the gap between Evernote, System XYZ and Trello
http://trello.com
Courtesy of Fog Creek / Joel Spolsky&amp;rsquo;s company</description>
    </item>
    
    <item>
      <title>Custom build of MacVim with file drawer - pure bliss</title>
      <link>https://miroadamy.com/posts/2012-10-07-macvim/</link>
      <pubDate>Sun, 07 Oct 2012 11:22:48 +0800</pubDate>
      
      <guid>https://miroadamy.com/posts/2012-10-07-macvim/</guid>
      <description>OK, NERDTree plugin IS great, but this is awesome.
Alloy made custom version of MacVim with file drawer: see https://github.com/alloy/macvim/wiki/Building
It is available in source - so you have to compile it yourselves. But if you do not want to, I did it and the binary is attached, built with these features:
 ./configure &amp;ndash;with-feature=huge &amp;ndash;enable-rubyinterp &amp;ndash;enable-pythoninterp &amp;ndash;enable-perlinterp &amp;ndash;enable-cscope
 Archive is attached: MacVim.zip
If you want to get my set of plugins and customizations, it is on GitHub: - https://github.</description>
    </item>
    
    <item>
      <title>Fixing Git plugin for Sublime Text 2</title>
      <link>https://miroadamy.com/posts/2012-09-21-post/</link>
      <pubDate>Fri, 21 Sep 2012 11:22:48 +0800</pubDate>
      
      <guid>https://miroadamy.com/posts/2012-09-21-post/</guid>
      <description>After update, the ST2 started to complain about missing git command.
Finding out Git on MBP:
1 2 3 4 5 6 7 8 9 10 11 12 13 14  platform $ which git git is /usr/bin/git git is /usr/local/bin/git platform $ git --version git version 1.7.7.5 (Apple Git-26) platform $ /usr/bin/git --version git version 1.7.7.5 (Apple Git-26) platform $ /usr/local/bin/git --version git version 1.7.3.2   Fix the the Package file in /Users/miro/Library/Application Support/Sublime Text 2/Packages/Git - Git.</description>
    </item>
    
    <item>
      <title>GitHub identity mixup</title>
      <link>https://miroadamy.com/posts/2012-04-15-github/</link>
      <pubDate>Sun, 15 Apr 2012 11:22:48 +0800</pubDate>
      
      <guid>https://miroadamy.com/posts/2012-04-15-github/</guid>
      <description>After I created the ThinkWrap GitHub account and uploaded the public key, this key got somehow bound to GitHub identity &amp;lsquo;madamy&amp;rsquo;
I had to add user madamy to my public GitHub repo - where I keep the dot-files - https://github.com/radegast/dotvim
This may be an issue for people that have their own private accounts - the key management is the key.
This article is useful:
 http://sealedabstract.com/code/github-ssh-with-multiple-identities-the-slightly-more-definitive-guide/ http://net.tutsplus.com/tutorials/tools-and-tips/how-to-work-with-github-and-multiple-accounts/  Alternative Use https for forking , instead read/write ssh.</description>
    </item>
    
    <item>
      <title>Using MacVim as git editor</title>
      <link>https://miroadamy.com/posts/2012-04-09-macvim-git/</link>
      <pubDate>Mon, 09 Apr 2012 11:22:48 +0800</pubDate>
      
      <guid>https://miroadamy.com/posts/2012-04-09-macvim-git/</guid>
      <description>Add this to .bashrc  export GIT_EDITOR=&amp;lsquo;/Applications/MacVim.app/Contents/MacOS/Vim -g -f &amp;lsquo;
 The key is -f, without it git will abort because of empty commit message.</description>
    </item>
    
    <item>
      <title>How to make unregistered files work in Quick View on OS-X</title>
      <link>https://miroadamy.com/posts/2012-04-08-quickview/</link>
      <pubDate>Sun, 08 Apr 2012 11:22:48 +0800</pubDate>
      
      <guid>https://miroadamy.com/posts/2012-04-08-quickview/</guid>
      <description>Out of the box Quick View (press Space in Finder) behaviour on unregistered files is not very useful: it shows huge Unix icon instead of content of file.
This is default for files like Makefile or build.gradle
This plugin makes it go away and show text file for all UTIs that are plain text: http://whomwah.github.com/qlstephen/
Installation: * open the DMG file * copy QLStephen.qlgenerator to /Users/&amp;lt;&amp;lt;USERNAME&amp;gt;&amp;gt;/Library/QuickLook/QLStephen.qlgenerator
That&amp;rsquo;s it.
Now it looks like this:</description>
    </item>
    
    <item>
      <title>ATG module graph</title>
      <link>https://miroadamy.com/posts/2012-04-02-atg-module-graph/</link>
      <pubDate>Mon, 02 Apr 2012 11:22:48 +0800</pubDate>
      
      <guid>https://miroadamy.com/posts/2012-04-02-atg-module-graph/</guid>
      <description>Notes from weekend hack: Project is in Bitbucket - https://bitbucket.org/miroadamy/atgdiagram/overview
Run in Diagrams/ATGDiagram
1 2 3 4  Radegast:ATGDiagram miro$ groovy -cp src src/listATGModules.groovy -e -m TWeStore.eStore &amp;gt;uml/test2.uml Radegast:ATGDiagram miro$ ./processUml.sh uml/test2.uml Radegast:ATGDiagram miro$ open uml/test2.png Radegast:ATGDiagram miro$   =&amp;gt; Output test2.uml
 the &amp;lsquo;.&amp;rsquo; in names is converted to &amp;lsquo;_&amp;rsquo; - GraphViz does not like it the &amp;lsquo;-&amp;rsquo; in names detto
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65  Using ATG_ROOT from environment variable $ATG_ROOT: /opt/ATG/ATG10.</description>
    </item>
    
    <item>
      <title>Diagram generation - plain text approach</title>
      <link>https://miroadamy.com/posts/2012-03-30-diagram-generation/</link>
      <pubDate>Fri, 30 Mar 2012 11:22:48 +0800</pubDate>
      
      <guid>https://miroadamy.com/posts/2012-03-30-diagram-generation/</guid>
      <description>GraphViz  installed from package See http://www.graphviz.org/
1 2 3 4 5 6  Radegast:diagrams miro$ dot -V dot - graphviz version 2.28.0 (20110509.1545) Radegast:diagrams miro$ which dot dot is /usr/local/bin/dot    SchemaSpy  installed in /opt/diagrams see http://schemaspy.sourceforge.net/
1 2 3 4 5 6 7 8 9 10 11 12  Radegast:schemaSpy miro$ java -jar ./schemaSpy_5.0.0.jar -cp .:/Users/miro/lib/java/jdbc/mysql-connector-java-5.1.7-bin.jar -t mysql -o library -host localhost -u twt_dX_core -db twt_dX_core -p twt_dX_core Using database properties: [.</description>
    </item>
    
    <item>
      <title>Few gitbits to remember</title>
      <link>https://miroadamy.com/posts/2012-03-25-few-git-tricks/</link>
      <pubDate>Sun, 25 Mar 2012 15:43:48 +0800</pubDate>
      
      <guid>https://miroadamy.com/posts/2012-03-25-few-git-tricks/</guid>
      <description>Few gitbits to remember Pushing new local branch to remote repo: Find a ref that matches experimental in the source repository (most likely, it would findrefs/heads/experimental), and update the same ref (e.g. refs/heads/experimental) in origin repository with it.
If experimental did not exist remotely, it would be created.
git push origin experimental
This is the same as:
git push origin experimental:refs/heads/experimental
Create the branch experimental in the origin repository by copying the current experimental branch.</description>
    </item>
    
    <item>
      <title>How to fix the remote origin from read only</title>
      <link>https://miroadamy.com/posts/2012-03-21-remote-origin/</link>
      <pubDate>Wed, 21 Mar 2012 11:22:48 +0800</pubDate>
      
      <guid>https://miroadamy.com/posts/2012-03-21-remote-origin/</guid>
      <description>Issue In dotvim repo, I used readonly URL for cloning the repository. Now I have created local branch ( linux-vm ) to track Linux specific font settings and need them to push up.
After creating new SSH pair and adding to GitHub, does not work
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41  [tkuser@cplx-dev-vf .</description>
    </item>
    
  </channel>
</rss>